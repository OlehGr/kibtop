# Generated by Django 4.0 on 2022-12-07 18:51

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name_en', models.CharField(choices=[('Nicosia', 'Nicosia'), ('Kyrenia', 'Kyrenia'), ('Famagusta', 'Famagusta'), ('Iskele', 'Iskele'), ('Guzelyurt', 'Guzelyurt'), ('Lefke', 'Lefke')], max_length=255)),
                ('city_name_ru', models.CharField(choices=[('Никосия', 'Никосия'), ('Сувенир', 'Сувенир'), ('FAMAG S TA', 'FAMAG S TA'), ('Док', 'Док'), ('Guzelyurt', 'Guzelyurt'), ('Лефке', 'Лефке')], max_length=255)),
                ('city_name_tr', models.CharField(choices=[('Güzellik', 'Güzellik'), ('Hediyelik eşya', 'Hediyelik eşya'), ('FAMAG S TA', 'FAMAG S TA'), ('Iskele', 'Iskele'), ('Guzelist', 'Guzelist'), ('Lefke', 'Lefke')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money_dollar', models.IntegerField()),
                ('monet_rub', models.IntegerField()),
                ('money_tr', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RealtyFull',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Product name')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Product name')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Product name')),
                ('title_tr', models.CharField(max_length=255, null=True, verbose_name='Product name')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('address', models.CharField(max_length=1024, verbose_name='The address is')),
                ('price', models.IntegerField(verbose_name='Starting price')),
                ('upload', models.FileField(upload_to='')),
                ('category_en', models.CharField(blank=True, choices=[('Real estate', 'Real estate'), ('Auto', 'Auto'), ('Job', 'Job'), ('Services', 'Services'), ('For kids', 'For kids'), ('Electronics', 'Electronics'), ('House and garden', 'House and garden'), ('Fashion and style', 'Fashion and style')], default=None, max_length=255, null=True)),
                ('category_ru', models.CharField(blank=True, choices=[('Недвижимость', 'Недвижимость'), ('Авто', 'Авто'), ('Работа', 'Работа'), ('Услуги', 'Услуги'), ('Для детей', 'Для детей'), ('Электроника', 'Электроника'), ('Дом и сад', 'Дом и сад'), ('Мода и стиль', 'Мода и стиль')], default=None, max_length=255, null=True)),
                ('category_tr', models.CharField(blank=True, choices=[('Emlak', 'Emlak'), ('Oto', 'Oto'), ('İş', 'İş'), ('Hizmetler', 'Hizmetler'), ('Çocuklar için', 'Çocuklar için'), ('Elektronik', 'Elektronik'), ('Ev ve bahçe', 'Ev ve bahçe'), ('Moda ve stil', 'Moda ve stil')], default=None, max_length=255, null=True)),
                ('recommend', models.BooleanField()),
                ('sub_apartment_en', models.CharField(choices=[('Apartments', 'Apartments'), ('House', 'House'), ('Land', 'Land'), ('Other', 'Other')], max_length=255, verbose_name='Sub Apartment')),
                ('sub_apartment_ru', models.CharField(choices=[('Квартиры', 'Квартиры'), ('Дом', 'Дом'), ('Земельные участки', 'Земельные участки'), ('Другой', 'Другой')], max_length=255, verbose_name='Sub Apartment')),
                ('sub_apartment_tr', models.CharField(choices=[('Daireler', 'Daireler'), ('Ev', 'Ev'), ('Kara', 'Kara'), ('Başka', 'Başka')], max_length=255, verbose_name='Sub Apartment')),
                ('apartment_number', models.CharField(max_length=255, verbose_name='Apartment number')),
                ('place_ad', models.CharField(choices=[('Owner', 'Owner'), ('Mediator', 'Mediator'), ('Builder', 'Builder')], max_length=255, verbose_name='Places an ad')),
                ('phone', models.CharField(max_length=255, verbose_name='Phone')),
                ('com_method', models.CharField(choices=[('By phone and text message', 'By phone and text message'), ('By phone', 'By phone'), ('Text message', 'Text message')], max_length=255, verbose_name='Communication method')),
                ('onl_screening', models.CharField(choices=[('Conducting', 'Conducting'), ('I dont want to.', 'I dont want to.')], max_length=255, verbose_name='Online-Screening')),
                ('url_video', models.URLField()),
                ('description', models.TextField()),
                ('balcony', models.BooleanField(blank=True, null=True, verbose_name='Balcony')),
                ('loggia', models.BooleanField(blank=True, null=True, verbose_name='Loggia')),
                ('wardrobe', models.BooleanField(blank=True, null=True, verbose_name='The Wardrobe')),
                ('panoramic_windows', models.BooleanField(blank=True, null=True, verbose_name='Panoramic windows')),
                ('total_area', models.IntegerField(verbose_name='Total Area')),
                ('kitchen_area', models.IntegerField(verbose_name='Kitchen Area')),
                ('live_area', models.IntegerField(verbose_name='Live Area')),
                ('ceiling_height', models.IntegerField(blank=True, null=True, verbose_name='Ceiling height')),
                ('combined', models.BooleanField(blank=True, null=True, verbose_name='Combined')),
                ('divided', models.BooleanField(blank=True, null=True, verbose_name='Divided')),
                ('windows', models.BooleanField(blank=True, null=True, verbose_name='Windows')),
                ('courtyard', models.BooleanField(blank=True, null=True, verbose_name='In the courtyard')),
                ('outside', models.BooleanField(blank=True, null=True, verbose_name='On the street')),
                ('sunny_side', models.BooleanField(blank=True, null=True, verbose_name='Sunny side')),
                ('repair', models.CharField(blank=True, choices=[('Required', 'Required'), ('Cosmic', 'Cosmic'), ('Euro', 'Euro'), ('Design', 'Design')], max_length=255, null=True, verbose_name='Repair')),
                ('underfloor_heating', models.BooleanField(blank=True, null=True, verbose_name='Underfloor heating')),
                ('furniture', models.BooleanField(blank=True, null=True, verbose_name='Furniture')),
                ('kitchen', models.BooleanField(blank=True, null=True, verbose_name='Kitchen')),
                ('storing_clothes', models.BooleanField(blank=True, null=True, verbose_name='Storing clothes')),
                ('sleeping_places', models.BooleanField(blank=True, null=True, verbose_name='Sleeping places')),
                ('air_conditioner', models.BooleanField(blank=True, null=True, verbose_name='Air conditioner')),
                ('refrigerator', models.BooleanField(blank=True, null=True, verbose_name='Refrigerator')),
                ('washing_machine', models.BooleanField(blank=True, null=True, verbose_name='Washing machine')),
                ('dishwasher', models.BooleanField(blank=True, null=True, verbose_name='Dishwasher')),
                ('water_heater', models.BooleanField(blank=True, null=True, verbose_name='Water heater')),
                ('type_house', models.CharField(choices=[('Brick', 'Brick'), ('Panel', 'Panel'), ('Block', 'Block'), ('Monolithic', 'Monolithic'), ('Monolithic Brick', 'Monolithic Brick'), ('Wooden', 'Wooden')], max_length=255, verbose_name='Type House')),
                ('year_construction', models.IntegerField(blank=True, null=True, verbose_name='Year of construction')),
                ('concierge', models.BooleanField(blank=True, null=True, verbose_name='Concierge')),
                ('garbage_chute', models.BooleanField(blank=True, null=True, verbose_name='Garbage chute')),
                ('gas', models.BooleanField(blank=True, null=True, verbose_name='Gas')),
                ('floors_house', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31'), ('32', '32'), ('33', '33'), ('34', '34'), ('35', '35'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48'), ('49', '49'), ('50', '50'), ('51', '51'), ('52', '52'), ('53', '53'), ('54', '54'), ('55', '55'), ('56', '56'), ('57', '57'), ('58', '58'), ('59', '59'), ('60', '60'), ('61', '61'), ('62', '62'), ('63', '63'), ('64', '64'), ('65', '65'), ('66', '66'), ('67', '67'), ('68', '68'), ('69', '69'), ('70', '70'), ('71', '71'), ('72', '72'), ('73', '73'), ('74', '74'), ('75', '75'), ('76', '76'), ('77', '77'), ('78', '78'), ('79', '79'), ('80', '80'), ('81', '81'), ('82', '82'), ('83', '83'), ('84', '84'), ('85', '85'), ('86', '86'), ('87', '87'), ('88', '88'), ('89', '89'), ('90', '90'), ('91', '91'), ('92', '92'), ('93', '93'), ('94', '94'), ('95', '95'), ('96', '96'), ('97', '97'), ('98', '98'), ('99', '99')], max_length=255, verbose_name='Floors in the house')),
                ('planned_demolition', models.BooleanField(blank=True, null=True, verbose_name='Planned demolition')),
                ('finishing', models.CharField(blank=True, choices=[('Unfinished', 'Unfinished'), ('Prefinishing', 'Prefinishing'), ('Finishing', 'Finishing')], max_length=255, null=True, verbose_name='Finishing')),
                ('elevator_passenger', models.CharField(blank=True, choices=[('No', 'No'), (1, 1), (2, 2), (3, 3), (4, 4)], max_length=255, null=True, verbose_name='Elevator Passenger')),
                ('elevator_cargo', models.CharField(blank=True, choices=[('No', 'No'), (1, 1), (2, 2), (3, 3), (4, 4)], max_length=255, null=True, verbose_name='Elevator Cargo')),
                ('closed_area', models.BooleanField(blank=True, null=True, verbose_name='Closed area')),
                ('playground', models.BooleanField(blank=True, null=True, verbose_name='Playground')),
                ('sports_field', models.BooleanField(blank=True, null=True, verbose_name='Sports field')),
                ('underground', models.BooleanField(blank=True, null=True, verbose_name='Underground')),
                ('ground_multilevel', models.BooleanField(blank=True, null=True, verbose_name='Ground multilevel')),
                ('open_yard', models.BooleanField(blank=True, null=True, verbose_name='Open in the yard')),
                ('behind_barrier_yard', models.BooleanField(blank=True, null=True, verbose_name='Behind the barrier in the yard')),
                ('selling_method', models.CharField(blank=True, choices=[('Free', 'Free'), ('Alternative', 'Alternative')], max_length=255, null=True)),
                ('sell_type_en', models.CharField(choices=[('Rent', 'Rent'), ('Buy', 'Buy')], max_length=255)),
                ('sell_type_ru', models.CharField(choices=[('Арендовать', 'Арендовать'), ('Купить', 'Купить')], max_length=255)),
                ('sell_type_tr', models.CharField(choices=[('Kiraya vermek', 'Kiraya vermek'), ('Satın almak', 'Satın almak')], max_length=255)),
                ('all_old_new_en', models.CharField(choices=[('All', 'All'), ('Old', 'Old'), ('New', 'New')], max_length=255)),
                ('all_old_new_ru', models.CharField(choices=[('Все', 'Все'), ('Старый', 'Старый'), ('Новый', 'Новый')], max_length=255)),
                ('all_old_new_tr', models.CharField(choices=[('Herşey', 'Herşey'), ('Eskimiş', 'Eskimiş'), ('Yeni', 'Yeni')], max_length=255)),
                ('sell_type_rent', models.CharField(choices=[('For a long time', 'For a long time'), ('Daily', 'Daily')], max_length=255, verbose_name='Realty category type use')),
                ('number_rooms_en', models.CharField(choices=[('Studio', 'Studio'), ('1+1', '1+1'), ('2+1', '2+1'), ('3+1', '3+1'), ('4+1 and more', '4+1 and more')], max_length=255)),
                ('number_rooms_ru', models.CharField(choices=[('Студия', 'Студия'), ('1+1', '1+1'), ('2+1', '2+1'), ('3+1', '3+1'), ('4+1 и больше', '4+1 и больше')], max_length=255)),
                ('number_rooms_tr', models.CharField(choices=[('Stüdyo', 'Stüdyo'), ('1+1', '1+1'), ('2+1', '2+1'), ('3+1', '3+1'), ('4+1 ve daha fazlası', '4+1 ve daha fazlası')], max_length=255)),
                ('location', models.CharField(choices=[('Within the city', 'Within the city'), ('Out of town', 'Out of town')], max_length=255, verbose_name='Location')),
                ('type_obj', models.CharField(choices=[('HOUSE', 'HOUSE'), ('Cottage', 'Cottage'), ('Townhouse', 'Townhouse')], max_length=255, verbose_name='Type of object')),
                ('location_rent', models.CharField(choices=[('Within the city', 'Within the city'), ('Out of town', 'Out of town')], max_length=255, verbose_name='Location')),
                ('type_obj_rent', models.CharField(choices=[('HOUSE', 'HOUSE'), ('Cottage', 'Cottage'), ('Townhouse', 'Townhouse')], max_length=255, verbose_name='Type of object')),
                ('square', models.IntegerField(verbose_name='Square footage')),
                ('sell_type_plot_type', models.CharField(choices=[('Settlements', 'Settlements'), ('Agricultural land', 'Agricultural land'), ('Intended use', 'Intended use')], max_length=255, verbose_name='Realty category type use')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customuser', verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isDark', models.BooleanField()),
                ('img', models.FileField(upload_to='stock/')),
                ('title', models.CharField(max_length=255)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_tr', models.CharField(max_length=255, null=True)),
                ('desc', models.TextField()),
                ('desc_ru', models.TextField(null=True)),
                ('desc_en', models.TextField(null=True)),
                ('desc_tr', models.TextField(null=True)),
                ('background', models.FileField(upload_to='stock/')),
            ],
        ),
        migrations.CreateModel(
            name='RealtyFullUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploads', models.FileField(upload_to='')),
                ('realty_full_upload', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='realty_full_upload', to='sections.realtyfull')),
            ],
        ),
    ]
